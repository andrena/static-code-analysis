plugins {
    id 'java-defaults'
    id 'junit5'
    id 'application'
    id 'dependency-updates'
    id 'idea'
    id 'jacoco-report'
//    id 'spotless'
    id "org.sonarqube" version "3.3"
    id 'com.github.jk1.dependency-license-report' version '2.0'
}

group 'de.andrena.tools'
version '0.33'

repositories {
    mavenCentral()
    maven {
        url "http://www.programmers-friend.org/maven/repo"
        allowInsecureProtocol true
    }
}

dependencies {
    implementation 'org.apache.logging.log4j:log4j-core:2.17.0'
    implementation 'org.apache.logging.log4j:log4j-api:2.17.0'

    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'com.google.guava:guava:31.0.1-jre'

    implementation 'org.ow2.asm:asm:9.2'
    implementation 'io.github.classgraph:classgraph:4.8.138'

    implementation group: 'org.threeten', name: 'threeten-extra', version: '1.7.0'
    implementation group: 'com.github.spotbugs', name: 'spotbugs-annotations', version: '4.5.2'

    testImplementation 'com.tngtech.archunit:archunit-junit5:0.22.0'
    testImplementation 'org.assertj:assertj-core:3.21.0'
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes 'Main-Class': 'de.andrena.tools.staticcodeanalysis.application.Main'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

application {
    mainClass = 'de.andrena.tools.staticcodeanalysis.application.Main'
}

test {
    useJUnitPlatform()
}

sonarqube {
    properties {
        property 'sonar.core.codeCoveragePlugin', 'jacoco'
        property 'sonar.coverage.jacoco.xmlReportPaths', "${project.buildDir.getName()}/reports/jacoco/report.xml"
    }
}

import com.github.jk1.license.render.*
licenseReport {
    configurations = ['runtimeClasspath']
    renderers = [new TextReportRenderer(), new SimpleHtmlReportRenderer()]
}

task replaceVersionInREADME {
    ant.replaceregexp(match:"${project.name}"+'-([0-9\\.]+)\\.jar', replace:"${project.name}-${version}.jar", flags:'g', byline:true) {
        fileset(dir: '.', includes: 'README.md')
    }
}